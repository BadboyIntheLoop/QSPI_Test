ARM GAS  /tmp/cceH40nX.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.global	SystemInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	SystemInit:
  26              	.LFB144:
  27              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - ExitRun0Mode(): Specifies the Power Supply source. This function is
  10:Core/Src/system_stm32h7xx.c ****   *                        called at startup just after reset and before the call
  11:Core/Src/system_stm32h7xx.c ****   *                        of SystemInit(). This call is made inside
  12:Core/Src/system_stm32h7xx.c ****   *                        the "startup_stm32h7xx.s" file.
  13:Core/Src/system_stm32h7xx.c ****   *
  14:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  15:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  16:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  17:Core/Src/system_stm32h7xx.c ****   *
  18:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  19:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  20:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  23:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  24:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  25:Core/Src/system_stm32h7xx.c ****   *
  26:Core/Src/system_stm32h7xx.c ****   *
  27:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  28:Core/Src/system_stm32h7xx.c ****   * @attention
  29:Core/Src/system_stm32h7xx.c ****   *
  30:Core/Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  31:Core/Src/system_stm32h7xx.c ****   * All rights reserved.
ARM GAS  /tmp/cceH40nX.s 			page 2


  32:Core/Src/system_stm32h7xx.c ****   *
  33:Core/Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  34:Core/Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  35:Core/Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  36:Core/Src/system_stm32h7xx.c ****   *
  37:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  38:Core/Src/system_stm32h7xx.c ****   */
  39:Core/Src/system_stm32h7xx.c **** 
  40:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  41:Core/Src/system_stm32h7xx.c ****   * @{
  42:Core/Src/system_stm32h7xx.c ****   */
  43:Core/Src/system_stm32h7xx.c **** 
  44:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  45:Core/Src/system_stm32h7xx.c ****   * @{
  46:Core/Src/system_stm32h7xx.c ****   */
  47:Core/Src/system_stm32h7xx.c **** 
  48:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  49:Core/Src/system_stm32h7xx.c ****   * @{
  50:Core/Src/system_stm32h7xx.c ****   */
  51:Core/Src/system_stm32h7xx.c **** 
  52:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  53:Core/Src/system_stm32h7xx.c **** #include <math.h>
  54:Core/Src/system_stm32h7xx.c **** 
  55:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  56:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  57:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  58:Core/Src/system_stm32h7xx.c **** 
  59:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  60:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  61:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  62:Core/Src/system_stm32h7xx.c **** 
  63:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  64:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  65:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  66:Core/Src/system_stm32h7xx.c **** 
  67:Core/Src/system_stm32h7xx.c **** 
  68:Core/Src/system_stm32h7xx.c **** /**
  69:Core/Src/system_stm32h7xx.c ****   * @}
  70:Core/Src/system_stm32h7xx.c ****   */
  71:Core/Src/system_stm32h7xx.c **** 
  72:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  73:Core/Src/system_stm32h7xx.c ****   * @{
  74:Core/Src/system_stm32h7xx.c ****   */
  75:Core/Src/system_stm32h7xx.c **** 
  76:Core/Src/system_stm32h7xx.c **** /**
  77:Core/Src/system_stm32h7xx.c ****   * @}
  78:Core/Src/system_stm32h7xx.c ****   */
  79:Core/Src/system_stm32h7xx.c **** 
  80:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  81:Core/Src/system_stm32h7xx.c ****   * @{
  82:Core/Src/system_stm32h7xx.c ****   */
  83:Core/Src/system_stm32h7xx.c **** 
  84:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  85:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  86:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  87:Core/Src/system_stm32h7xx.c **** 
  88:Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
ARM GAS  /tmp/cceH40nX.s 			page 3


  89:Core/Src/system_stm32h7xx.c ****          configuration. */
  90:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  91:Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  92:Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
  93:Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  94:Core/Src/system_stm32h7xx.c **** 
  95:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  96:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  97:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  98:Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  99:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 100:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 101:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
 102:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 103:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 104:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 105:Core/Src/system_stm32h7xx.c **** #else
 106:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 107:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 108:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 109:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 110:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 111:Core/Src/system_stm32h7xx.c **** #else
 112:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 113:Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 114:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 115:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 116:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 117:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 118:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 119:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 120:Core/Src/system_stm32h7xx.c **** #else
 121:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 122:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 123:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 124:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x400. */
 125:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 126:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 127:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 128:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
 129:Core/Src/system_stm32h7xx.c **** 
 130:Core/Src/system_stm32h7xx.c **** /**
 131:Core/Src/system_stm32h7xx.c ****   * @}
 132:Core/Src/system_stm32h7xx.c ****   */
 133:Core/Src/system_stm32h7xx.c **** 
 134:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 135:Core/Src/system_stm32h7xx.c ****   * @{
 136:Core/Src/system_stm32h7xx.c ****   */
 137:Core/Src/system_stm32h7xx.c **** 
 138:Core/Src/system_stm32h7xx.c **** /**
 139:Core/Src/system_stm32h7xx.c ****   * @}
 140:Core/Src/system_stm32h7xx.c ****   */
 141:Core/Src/system_stm32h7xx.c **** 
 142:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 143:Core/Src/system_stm32h7xx.c ****   * @{
 144:Core/Src/system_stm32h7xx.c ****   */
 145:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
ARM GAS  /tmp/cceH40nX.s 			page 4


 146:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 147:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 148:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 149:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 150:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 151:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
 152:Core/Src/system_stm32h7xx.c ****   */
 153:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 154:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 155:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 156:Core/Src/system_stm32h7xx.c **** 
 157:Core/Src/system_stm32h7xx.c **** /**
 158:Core/Src/system_stm32h7xx.c ****   * @}
 159:Core/Src/system_stm32h7xx.c ****   */
 160:Core/Src/system_stm32h7xx.c **** 
 161:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 162:Core/Src/system_stm32h7xx.c ****   * @{
 163:Core/Src/system_stm32h7xx.c ****   */
 164:Core/Src/system_stm32h7xx.c **** 
 165:Core/Src/system_stm32h7xx.c **** /**
 166:Core/Src/system_stm32h7xx.c ****   * @}
 167:Core/Src/system_stm32h7xx.c ****   */
 168:Core/Src/system_stm32h7xx.c **** 
 169:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 170:Core/Src/system_stm32h7xx.c ****   * @{
 171:Core/Src/system_stm32h7xx.c ****   */
 172:Core/Src/system_stm32h7xx.c **** 
 173:Core/Src/system_stm32h7xx.c **** /**
 174:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 175:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 176:Core/Src/system_stm32h7xx.c ****   *         configuration.
 177:Core/Src/system_stm32h7xx.c ****   * @param  None
 178:Core/Src/system_stm32h7xx.c ****   * @retval None
 179:Core/Src/system_stm32h7xx.c ****   */
 180:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 181:Core/Src/system_stm32h7xx.c **** {
  28              		.loc 1 181 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 183:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 184:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 185:Core/Src/system_stm32h7xx.c **** 
 186:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 187:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 188:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 188 5 view .LVU1
  34              		.loc 1 188 16 is_stmt 0 view .LVU2
  35 0000 304A     		ldr	r2, .L6
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C2F88830 		str	r3, [r2, #136]
 189:Core/Src/system_stm32h7xx.c ****   #endif
 190:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 191:Core/Src/system_stm32h7xx.c **** 
ARM GAS  /tmp/cceH40nX.s 			page 5


 192:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 193:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  39              		.loc 1 193 3 is_stmt 1 view .LVU3
  40              		.loc 1 193 32 is_stmt 0 view .LVU4
  41 000e 2E4B     		ldr	r3, .L6+4
  42 0010 1B68     		ldr	r3, [r3]
  43 0012 03F00F03 		and	r3, r3, #15
  44              		.loc 1 193 5 view .LVU5
  45 0016 062B     		cmp	r3, #6
  46 0018 06D8     		bhi	.L2
 194:Core/Src/system_stm32h7xx.c ****   {
 195:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 196:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  47              		.loc 1 196 5 is_stmt 1 view .LVU6
  48 001a 2B4A     		ldr	r2, .L6+4
  49 001c 1368     		ldr	r3, [r2]
  50 001e 23F00F03 		bic	r3, r3, #15
  51 0022 43F00703 		orr	r3, r3, #7
  52 0026 1360     		str	r3, [r2]
  53              	.L2:
 197:Core/Src/system_stm32h7xx.c ****   }
 198:Core/Src/system_stm32h7xx.c **** 
 199:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 200:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  54              		.loc 1 200 3 view .LVU7
  55              		.loc 1 200 11 is_stmt 0 view .LVU8
  56 0028 284B     		ldr	r3, .L6+8
  57 002a 1A68     		ldr	r2, [r3]
  58 002c 42F00102 		orr	r2, r2, #1
  59 0030 1A60     		str	r2, [r3]
 201:Core/Src/system_stm32h7xx.c **** 
 202:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 203:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  60              		.loc 1 203 3 is_stmt 1 view .LVU9
  61              		.loc 1 203 13 is_stmt 0 view .LVU10
  62 0032 0022     		movs	r2, #0
  63 0034 1A61     		str	r2, [r3, #16]
 204:Core/Src/system_stm32h7xx.c **** 
 205:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 206:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  64              		.loc 1 206 3 is_stmt 1 view .LVU11
  65              		.loc 1 206 11 is_stmt 0 view .LVU12
  66 0036 1968     		ldr	r1, [r3]
  67 0038 254A     		ldr	r2, .L6+12
  68 003a 0A40     		ands	r2, r2, r1
  69 003c 1A60     		str	r2, [r3]
 207:Core/Src/system_stm32h7xx.c **** 
 208:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 209:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  70              		.loc 1 209 3 is_stmt 1 view .LVU13
  71              		.loc 1 209 32 is_stmt 0 view .LVU14
  72 003e 224B     		ldr	r3, .L6+4
  73 0040 1B68     		ldr	r3, [r3]
  74              		.loc 1 209 5 view .LVU15
  75 0042 13F0080F 		tst	r3, #8
  76 0046 06D0     		beq	.L3
 210:Core/Src/system_stm32h7xx.c ****   {
ARM GAS  /tmp/cceH40nX.s 			page 6


 211:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 212:Core/Src/system_stm32h7xx.c ****     MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  77              		.loc 1 212 5 is_stmt 1 view .LVU16
  78 0048 1F4A     		ldr	r2, .L6+4
  79 004a 1368     		ldr	r3, [r2]
  80 004c 23F00F03 		bic	r3, r3, #15
  81 0050 43F00703 		orr	r3, r3, #7
  82 0054 1360     		str	r3, [r2]
  83              	.L3:
 213:Core/Src/system_stm32h7xx.c ****   }
 214:Core/Src/system_stm32h7xx.c **** 
 215:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 216:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 217:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  84              		.loc 1 217 3 view .LVU17
  85              		.loc 1 217 15 is_stmt 0 view .LVU18
  86 0056 1D4B     		ldr	r3, .L6+8
  87 0058 0022     		movs	r2, #0
  88 005a 9A61     		str	r2, [r3, #24]
 218:Core/Src/system_stm32h7xx.c **** 
 219:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 220:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  89              		.loc 1 220 3 is_stmt 1 view .LVU19
  90              		.loc 1 220 15 is_stmt 0 view .LVU20
  91 005c DA61     		str	r2, [r3, #28]
 221:Core/Src/system_stm32h7xx.c **** 
 222:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 223:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  92              		.loc 1 223 3 is_stmt 1 view .LVU21
  93              		.loc 1 223 15 is_stmt 0 view .LVU22
  94 005e 1A62     		str	r2, [r3, #32]
 224:Core/Src/system_stm32h7xx.c **** #else
 225:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 226:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 227:Core/Src/system_stm32h7xx.c **** 
 228:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 229:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 230:Core/Src/system_stm32h7xx.c **** 
 231:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 232:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 233:Core/Src/system_stm32h7xx.c **** #endif
 234:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 235:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  95              		.loc 1 235 3 is_stmt 1 view .LVU23
  96              		.loc 1 235 18 is_stmt 0 view .LVU24
  97 0060 1C49     		ldr	r1, .L6+16
  98 0062 9962     		str	r1, [r3, #40]
 236:Core/Src/system_stm32h7xx.c **** 
 237:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 238:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
  99              		.loc 1 238 3 is_stmt 1 view .LVU25
 100              		.loc 1 238 16 is_stmt 0 view .LVU26
 101 0064 1C49     		ldr	r1, .L6+20
 102 0066 D962     		str	r1, [r3, #44]
 239:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 240:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 103              		.loc 1 240 3 is_stmt 1 view .LVU27
ARM GAS  /tmp/cceH40nX.s 			page 7


 104              		.loc 1 240 17 is_stmt 0 view .LVU28
 105 0068 1C49     		ldr	r1, .L6+24
 106 006a 1963     		str	r1, [r3, #48]
 241:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 242:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 107              		.loc 1 242 3 is_stmt 1 view .LVU29
 108              		.loc 1 242 18 is_stmt 0 view .LVU30
 109 006c 5A63     		str	r2, [r3, #52]
 243:Core/Src/system_stm32h7xx.c **** 
 244:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 245:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 110              		.loc 1 245 3 is_stmt 1 view .LVU31
 111              		.loc 1 245 17 is_stmt 0 view .LVU32
 112 006e 9963     		str	r1, [r3, #56]
 246:Core/Src/system_stm32h7xx.c **** 
 247:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 248:Core/Src/system_stm32h7xx.c **** 
 249:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 113              		.loc 1 249 3 is_stmt 1 view .LVU33
 114              		.loc 1 249 18 is_stmt 0 view .LVU34
 115 0070 DA63     		str	r2, [r3, #60]
 250:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 251:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 116              		.loc 1 251 3 is_stmt 1 view .LVU35
 117              		.loc 1 251 17 is_stmt 0 view .LVU36
 118 0072 1964     		str	r1, [r3, #64]
 252:Core/Src/system_stm32h7xx.c **** 
 253:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 254:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 119              		.loc 1 254 3 is_stmt 1 view .LVU37
 120              		.loc 1 254 18 is_stmt 0 view .LVU38
 121 0074 5A64     		str	r2, [r3, #68]
 255:Core/Src/system_stm32h7xx.c **** 
 256:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 257:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 122              		.loc 1 257 3 is_stmt 1 view .LVU39
 123              		.loc 1 257 11 is_stmt 0 view .LVU40
 124 0076 1968     		ldr	r1, [r3]
 125 0078 21F48021 		bic	r1, r1, #262144
 126 007c 1960     		str	r1, [r3]
 258:Core/Src/system_stm32h7xx.c **** 
 259:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 260:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 127              		.loc 1 260 3 is_stmt 1 view .LVU41
 128              		.loc 1 260 13 is_stmt 0 view .LVU42
 129 007e 1A66     		str	r2, [r3, #96]
 261:Core/Src/system_stm32h7xx.c **** 
 262:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 263:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 264:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 130              		.loc 1 264 3 is_stmt 1 view .LVU43
 131              		.loc 1 264 13 is_stmt 0 view .LVU44
 132 0080 174B     		ldr	r3, .L6+28
 133 0082 1A68     		ldr	r2, [r3]
 134              		.loc 1 264 22 view .LVU45
 135 0084 174B     		ldr	r3, .L6+32
 136 0086 1340     		ands	r3, r3, r2
ARM GAS  /tmp/cceH40nX.s 			page 8


 137              		.loc 1 264 5 view .LVU46
 138 0088 B3F1005F 		cmp	r3, #536870912
 139 008c 02D2     		bcs	.L4
 265:Core/Src/system_stm32h7xx.c ****   {
 266:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 267:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
 268:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 140              		.loc 1 268 5 is_stmt 1 view .LVU47
 141              		.loc 1 268 35 is_stmt 0 view .LVU48
 142 008e 164B     		ldr	r3, .L6+36
 143 0090 0122     		movs	r2, #1
 144 0092 1A60     		str	r2, [r3]
 145              	.L4:
 269:Core/Src/system_stm32h7xx.c ****   }
 270:Core/Src/system_stm32h7xx.c **** #endif /* STM32H7_DEV_ID */
 271:Core/Src/system_stm32h7xx.c **** 
 272:Core/Src/system_stm32h7xx.c **** #if defined(DATA_IN_D2_SRAM)
 273:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM), enable the D2 SRAM clock (AHB SRAM clock) *
 274:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 275:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 276:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 277:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 278:Core/Src/system_stm32h7xx.c **** #else
 279:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 280:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 281:Core/Src/system_stm32h7xx.c **** 
 282:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 283:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 284:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 285:Core/Src/system_stm32h7xx.c **** 
 286:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 287:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 288:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 289:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 290:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 291:Core/Src/system_stm32h7xx.c **** 
 292:Core/Src/system_stm32h7xx.c **** #else
 293:Core/Src/system_stm32h7xx.c ****   if(READ_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN) == 0U)
 146              		.loc 1 293 3 is_stmt 1 view .LVU49
 147              		.loc 1 293 6 is_stmt 0 view .LVU50
 148 0094 0D4B     		ldr	r3, .L6+8
 149 0096 D3F8D430 		ldr	r3, [r3, #212]
 150              		.loc 1 293 5 view .LVU51
 151 009a 13F4805F 		tst	r3, #4096
 152 009e 10D1     		bne	.L1
 294:Core/Src/system_stm32h7xx.c ****   {
 295:Core/Src/system_stm32h7xx.c ****     /* Enable the FMC interface clock */
 296:Core/Src/system_stm32h7xx.c ****     SET_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN);
 153              		.loc 1 296 5 is_stmt 1 view .LVU52
 154 00a0 0A4B     		ldr	r3, .L6+8
 155 00a2 D3F8D420 		ldr	r2, [r3, #212]
 156 00a6 42F48052 		orr	r2, r2, #4096
 157 00aa C3F8D420 		str	r2, [r3, #212]
 297:Core/Src/system_stm32h7xx.c **** 
 298:Core/Src/system_stm32h7xx.c ****     /*
 299:Core/Src/system_stm32h7xx.c ****      * Disable the FMC bank1 (enabled after reset).
 300:Core/Src/system_stm32h7xx.c ****      * This, prevents CPU speculation access on this bank which blocks the use of FMC during
ARM GAS  /tmp/cceH40nX.s 			page 9


 301:Core/Src/system_stm32h7xx.c ****      * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 302:Core/Src/system_stm32h7xx.c ****      */
 303:Core/Src/system_stm32h7xx.c ****     FMC_Bank1_R->BTCR[0] = 0x000030D2;
 158              		.loc 1 303 5 view .LVU53
 159              		.loc 1 303 26 is_stmt 0 view .LVU54
 160 00ae 0F4A     		ldr	r2, .L6+40
 161 00b0 43F2D201 		movw	r1, #12498
 162 00b4 1160     		str	r1, [r2]
 304:Core/Src/system_stm32h7xx.c **** 
 305:Core/Src/system_stm32h7xx.c ****     /* Disable the FMC interface clock */
 306:Core/Src/system_stm32h7xx.c ****     CLEAR_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN);
 163              		.loc 1 306 5 is_stmt 1 view .LVU55
 164 00b6 D3F8D420 		ldr	r2, [r3, #212]
 165 00ba 22F48052 		bic	r2, r2, #4096
 166 00be C3F8D420 		str	r2, [r3, #212]
 167              	.L1:
 307:Core/Src/system_stm32h7xx.c ****   }
 308:Core/Src/system_stm32h7xx.c **** 
 309:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 310:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 311:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 312:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 313:Core/Src/system_stm32h7xx.c **** 
 314:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 315:Core/Src/system_stm32h7xx.c **** }
 168              		.loc 1 315 1 is_stmt 0 view .LVU56
 169 00c2 7047     		bx	lr
 170              	.L7:
 171              		.align	2
 172              	.L6:
 173 00c4 00ED00E0 		.word	-536810240
 174 00c8 00200052 		.word	1375739904
 175 00cc 00440258 		.word	1476543488
 176 00d0 7FEDF6EA 		.word	-352916097
 177 00d4 00020202 		.word	33686016
 178 00d8 0000FF01 		.word	33488896
 179 00dc 80020101 		.word	16843392
 180 00e0 0010005C 		.word	1543507968
 181 00e4 0000FFFF 		.word	-65536
 182 00e8 08810051 		.word	1358987528
 183 00ec 00400052 		.word	1375748096
 184              		.cfi_endproc
 185              	.LFE144:
 187              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 188              		.align	1
 189              		.global	SystemCoreClockUpdate
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu fpv5-d16
 195              	SystemCoreClockUpdate:
 196              	.LFB145:
 316:Core/Src/system_stm32h7xx.c **** 
 317:Core/Src/system_stm32h7xx.c **** /**
 318:Core/Src/system_stm32h7xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 319:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 320:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
ARM GAS  /tmp/cceH40nX.s 			page 10


 321:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 322:Core/Src/system_stm32h7xx.c ****   *
 323:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 324:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 325:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 326:Core/Src/system_stm32h7xx.c ****   *
 327:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 328:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 329:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 330:Core/Src/system_stm32h7xx.c ****   *
 331:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 332:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 333:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 334:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 335:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 336:Core/Src/system_stm32h7xx.c ****   *
 337:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 338:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 339:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 340:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 341:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 342:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 343:Core/Src/system_stm32h7xx.c ****   *
 344:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 345:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 346:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 347:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 348:Core/Src/system_stm32h7xx.c ****   *
 349:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 350:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
 351:Core/Src/system_stm32h7xx.c ****   * @param  None
 352:Core/Src/system_stm32h7xx.c ****   * @retval None
 353:Core/Src/system_stm32h7xx.c ****   */
 354:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 355:Core/Src/system_stm32h7xx.c **** {
 197              		.loc 1 355 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 202 0000 10B4     		push	{r4}
 203              	.LCFI0:
 204              		.cfi_def_cfa_offset 4
 205              		.cfi_offset 4, -4
 356:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 206              		.loc 1 356 3 view .LVU58
 357:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 207              		.loc 1 357 3 view .LVU59
 358:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 208              		.loc 1 358 3 view .LVU60
 359:Core/Src/system_stm32h7xx.c **** 
 360:Core/Src/system_stm32h7xx.c **** 
 361:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 362:Core/Src/system_stm32h7xx.c **** 
 363:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 209              		.loc 1 363 3 view .LVU61
 210              		.loc 1 363 14 is_stmt 0 view .LVU62
ARM GAS  /tmp/cceH40nX.s 			page 11


 211 0002 7A4B     		ldr	r3, .L22
 212 0004 1B69     		ldr	r3, [r3, #16]
 213              		.loc 1 363 21 view .LVU63
 214 0006 03F03803 		and	r3, r3, #56
 215 000a 182B     		cmp	r3, #24
 216 000c 00F2E580 		bhi	.L9
 217 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 218              	.L11:
 219 0014 1B00     		.2byte	(.L14-.L11)/2
 220 0016 E300     		.2byte	(.L9-.L11)/2
 221 0018 E300     		.2byte	(.L9-.L11)/2
 222 001a E300     		.2byte	(.L9-.L11)/2
 223 001c E300     		.2byte	(.L9-.L11)/2
 224 001e E300     		.2byte	(.L9-.L11)/2
 225 0020 E300     		.2byte	(.L9-.L11)/2
 226 0022 E300     		.2byte	(.L9-.L11)/2
 227 0024 1900     		.2byte	(.L13-.L11)/2
 228 0026 E300     		.2byte	(.L9-.L11)/2
 229 0028 E300     		.2byte	(.L9-.L11)/2
 230 002a E300     		.2byte	(.L9-.L11)/2
 231 002c E300     		.2byte	(.L9-.L11)/2
 232 002e E300     		.2byte	(.L9-.L11)/2
 233 0030 E300     		.2byte	(.L9-.L11)/2
 234 0032 E300     		.2byte	(.L9-.L11)/2
 235 0034 EA00     		.2byte	(.L19-.L11)/2
 236 0036 E300     		.2byte	(.L9-.L11)/2
 237 0038 E300     		.2byte	(.L9-.L11)/2
 238 003a E300     		.2byte	(.L9-.L11)/2
 239 003c E300     		.2byte	(.L9-.L11)/2
 240 003e E300     		.2byte	(.L9-.L11)/2
 241 0040 E300     		.2byte	(.L9-.L11)/2
 242 0042 E300     		.2byte	(.L9-.L11)/2
 243 0044 3700     		.2byte	(.L10-.L11)/2
 244              		.p2align 1
 245              	.L13:
 246 0046 6A4A     		ldr	r2, .L22+4
 247 0048 05E0     		b	.L12
 248              	.L14:
 364:Core/Src/system_stm32h7xx.c ****   {
 365:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 366:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 249              		.loc 1 366 5 is_stmt 1 view .LVU64
 250              		.loc 1 366 57 is_stmt 0 view .LVU65
 251 004a 684B     		ldr	r3, .L22
 252 004c 1B68     		ldr	r3, [r3]
 253              		.loc 1 366 78 view .LVU66
 254 004e C3F3C103 		ubfx	r3, r3, #3, #2
 255              		.loc 1 366 25 view .LVU67
 256 0052 684A     		ldr	r2, .L22+8
 257 0054 DA40     		lsrs	r2, r2, r3
 258              	.LVL0:
 367:Core/Src/system_stm32h7xx.c ****     break;
 259              		.loc 1 367 5 is_stmt 1 view .LVU68
 260              	.L12:
 368:Core/Src/system_stm32h7xx.c **** 
 369:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 370:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
ARM GAS  /tmp/cceH40nX.s 			page 12


 371:Core/Src/system_stm32h7xx.c ****     break;
 372:Core/Src/system_stm32h7xx.c **** 
 373:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 374:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 375:Core/Src/system_stm32h7xx.c ****     break;
 376:Core/Src/system_stm32h7xx.c **** 
 377:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 378:Core/Src/system_stm32h7xx.c **** 
 379:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 380:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 381:Core/Src/system_stm32h7xx.c ****     */
 382:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 383:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 384:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 385:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 386:Core/Src/system_stm32h7xx.c **** 
 387:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 388:Core/Src/system_stm32h7xx.c ****     {
 389:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 390:Core/Src/system_stm32h7xx.c ****       {
 391:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 392:Core/Src/system_stm32h7xx.c **** 
 393:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 394:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 395:Core/Src/system_stm32h7xx.c **** 
 396:Core/Src/system_stm32h7xx.c ****         break;
 397:Core/Src/system_stm32h7xx.c **** 
 398:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 399:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 400:Core/Src/system_stm32h7xx.c ****         break;
 401:Core/Src/system_stm32h7xx.c **** 
 402:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 403:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 404:Core/Src/system_stm32h7xx.c ****         break;
 405:Core/Src/system_stm32h7xx.c **** 
 406:Core/Src/system_stm32h7xx.c ****       default:
 407:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 408:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 409:Core/Src/system_stm32h7xx.c ****         break;
 410:Core/Src/system_stm32h7xx.c ****       }
 411:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 412:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 413:Core/Src/system_stm32h7xx.c ****     }
 414:Core/Src/system_stm32h7xx.c ****     else
 415:Core/Src/system_stm32h7xx.c ****     {
 416:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 417:Core/Src/system_stm32h7xx.c ****     }
 418:Core/Src/system_stm32h7xx.c ****     break;
 419:Core/Src/system_stm32h7xx.c **** 
 420:Core/Src/system_stm32h7xx.c ****   default:
 421:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 422:Core/Src/system_stm32h7xx.c ****     break;
 423:Core/Src/system_stm32h7xx.c ****   }
 424:Core/Src/system_stm32h7xx.c **** 
 425:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 426:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 427:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
ARM GAS  /tmp/cceH40nX.s 			page 13


 261              		.loc 1 427 3 view .LVU69
 262              		.loc 1 427 30 is_stmt 0 view .LVU70
 263 0056 6548     		ldr	r0, .L22
 264 0058 8369     		ldr	r3, [r0, #24]
 265              		.loc 1 427 59 view .LVU71
 266 005a C3F30323 		ubfx	r3, r3, #8, #4
 267              		.loc 1 427 25 view .LVU72
 268 005e 6649     		ldr	r1, .L22+12
 269 0060 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 270              	.LVL1:
 428:Core/Src/system_stm32h7xx.c **** 
 429:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 430:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 271              		.loc 1 430 3 is_stmt 1 view .LVU73
 272              		.loc 1 430 23 is_stmt 0 view .LVU74
 273 0062 DA40     		lsrs	r2, r2, r3
 274              	.LVL2:
 431:Core/Src/system_stm32h7xx.c **** 
 432:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 433:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 275              		.loc 1 433 3 is_stmt 1 view .LVU75
 276              		.loc 1 433 66 is_stmt 0 view .LVU76
 277 0064 8369     		ldr	r3, [r0, #24]
 278              	.LVL3:
 279              		.loc 1 433 93 view .LVU77
 280 0066 03F00F03 		and	r3, r3, #15
 281              		.loc 1 433 61 view .LVU78
 282 006a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 283              		.loc 1 433 118 view .LVU79
 284 006c 03F01F03 		and	r3, r3, #31
 285              		.loc 1 433 40 view .LVU80
 286 0070 22FA03F3 		lsr	r3, r2, r3
 287              		.loc 1 433 17 view .LVU81
 288 0074 6149     		ldr	r1, .L22+16
 289              		.loc 1 433 17 view .LVU82
 290 0076 0B60     		str	r3, [r1]
 434:Core/Src/system_stm32h7xx.c **** 
 435:Core/Src/system_stm32h7xx.c **** #else
 436:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 437:Core/Src/system_stm32h7xx.c **** 
 438:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 439:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 440:Core/Src/system_stm32h7xx.c **** 
 441:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 442:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 443:Core/Src/system_stm32h7xx.c **** 
 444:Core/Src/system_stm32h7xx.c **** #endif
 445:Core/Src/system_stm32h7xx.c **** 
 446:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 447:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 448:Core/Src/system_stm32h7xx.c **** #else
 449:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 291              		.loc 1 449 3 is_stmt 1 view .LVU83
 292              		.loc 1 449 19 is_stmt 0 view .LVU84
 293 0078 614B     		ldr	r3, .L22+20
 294 007a 1A60     		str	r2, [r3]
 450:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
ARM GAS  /tmp/cceH40nX.s 			page 14


 451:Core/Src/system_stm32h7xx.c **** }
 295              		.loc 1 451 1 view .LVU85
 296 007c 5DF8044B 		ldr	r4, [sp], #4
 297              	.LCFI1:
 298              		.cfi_remember_state
 299              		.cfi_restore 4
 300              		.cfi_def_cfa_offset 0
 301 0080 7047     		bx	lr
 302              	.LVL4:
 303              	.L10:
 304              	.LCFI2:
 305              		.cfi_restore_state
 382:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 306              		.loc 1 382 5 is_stmt 1 view .LVU86
 382:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 307              		.loc 1 382 21 is_stmt 0 view .LVU87
 308 0082 5A49     		ldr	r1, .L22
 309 0084 886A     		ldr	r0, [r1, #40]
 382:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 310              		.loc 1 382 15 view .LVU88
 311 0086 00F00300 		and	r0, r0, #3
 312              	.LVL5:
 383:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 313              		.loc 1 383 5 is_stmt 1 view .LVU89
 383:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 314              		.loc 1 383 17 is_stmt 0 view .LVU90
 315 008a 8C6A     		ldr	r4, [r1, #40]
 383:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 316              		.loc 1 383 10 view .LVU91
 317 008c C4F30512 		ubfx	r2, r4, #4, #6
 318              	.LVL6:
 384:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 319              		.loc 1 384 5 is_stmt 1 view .LVU92
 384:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 320              		.loc 1 384 22 is_stmt 0 view .LVU93
 321 0090 CB6A     		ldr	r3, [r1, #44]
 384:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 322              		.loc 1 384 15 view .LVU94
 323 0092 03F00103 		and	r3, r3, #1
 324              	.LVL7:
 385:Core/Src/system_stm32h7xx.c **** 
 325              		.loc 1 385 5 is_stmt 1 view .LVU95
 385:Core/Src/system_stm32h7xx.c **** 
 326              		.loc 1 385 50 is_stmt 0 view .LVU96
 327 0096 496B     		ldr	r1, [r1, #52]
 385:Core/Src/system_stm32h7xx.c **** 
 328              		.loc 1 385 85 view .LVU97
 329 0098 C1F3CC01 		ubfx	r1, r1, #3, #13
 385:Core/Src/system_stm32h7xx.c **** 
 330              		.loc 1 385 23 view .LVU98
 331 009c 03FB01F3 		mul	r3, r3, r1
 332              	.LVL8:
 385:Core/Src/system_stm32h7xx.c **** 
 333              		.loc 1 385 12 view .LVU99
 334 00a0 07EE903A 		vmov	s15, r3	@ int
 335 00a4 F8EE677A 		vcvt.f32.u32	s15, s15
 336              	.LVL9:
ARM GAS  /tmp/cceH40nX.s 			page 15


 387:Core/Src/system_stm32h7xx.c ****     {
 337              		.loc 1 387 5 is_stmt 1 view .LVU100
 387:Core/Src/system_stm32h7xx.c ****     {
 338              		.loc 1 387 8 is_stmt 0 view .LVU101
 339 00a8 14F47C7F 		tst	r4, #1008
 340 00ac D3D0     		beq	.L12
 389:Core/Src/system_stm32h7xx.c ****       {
 341              		.loc 1 389 7 is_stmt 1 view .LVU102
 342 00ae 0128     		cmp	r0, #1
 343 00b0 59D0     		beq	.L15
 344 00b2 0228     		cmp	r0, #2
 345 00b4 74D0     		beq	.L16
 346 00b6 18B3     		cbz	r0, .L21
 407:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 347              		.loc 1 407 11 view .LVU103
 407:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 348              		.loc 1 407 41 is_stmt 0 view .LVU104
 349 00b8 4C48     		ldr	r0, .L22
 350              	.LVL10:
 407:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 351              		.loc 1 407 41 view .LVU105
 352 00ba 0168     		ldr	r1, [r0]
 407:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 353              		.loc 1 407 62 view .LVU106
 354 00bc C1F3C101 		ubfx	r1, r1, #3, #2
 407:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 355              		.loc 1 407 20 view .LVU107
 356 00c0 4C4B     		ldr	r3, .L22+8
 357 00c2 CB40     		lsrs	r3, r3, r1
 358              	.LVL11:
 408:Core/Src/system_stm32h7xx.c ****         break;
 359              		.loc 1 408 11 is_stmt 1 view .LVU108
 408:Core/Src/system_stm32h7xx.c ****         break;
 360              		.loc 1 408 21 is_stmt 0 view .LVU109
 361 00c4 07EE103A 		vmov	s14, r3	@ int
 362 00c8 F8EE476A 		vcvt.f32.u32	s13, s14
 408:Core/Src/system_stm32h7xx.c ****         break;
 363              		.loc 1 408 41 view .LVU110
 364 00cc 07EE102A 		vmov	s14, r2	@ int
 365 00d0 B8EE476A 		vcvt.f32.u32	s12, s14
 408:Core/Src/system_stm32h7xx.c ****         break;
 366              		.loc 1 408 39 view .LVU111
 367 00d4 86EE867A 		vdiv.f32	s14, s13, s12
 408:Core/Src/system_stm32h7xx.c ****         break;
 368              		.loc 1 408 82 view .LVU112
 369 00d8 036B     		ldr	r3, [r0, #48]
 370              	.LVL12:
 408:Core/Src/system_stm32h7xx.c ****         break;
 371              		.loc 1 408 68 view .LVU113
 372 00da C3F30803 		ubfx	r3, r3, #0, #9
 408:Core/Src/system_stm32h7xx.c ****         break;
 373              		.loc 1 408 59 view .LVU114
 374 00de 06EE903A 		vmov	s13, r3	@ int
 375 00e2 F8EE666A 		vcvt.f32.u32	s13, s13
 408:Core/Src/system_stm32h7xx.c ****         break;
 376              		.loc 1 408 121 view .LVU115
 377 00e6 9FED476A 		vldr.32	s12, .L22+24
ARM GAS  /tmp/cceH40nX.s 			page 16


 378 00ea 67EE867A 		vmul.f32	s15, s15, s12
 379              	.LVL13:
 408:Core/Src/system_stm32h7xx.c ****         break;
 380              		.loc 1 408 112 view .LVU116
 381 00ee 76EEA77A 		vadd.f32	s15, s13, s15
 408:Core/Src/system_stm32h7xx.c ****         break;
 382              		.loc 1 408 139 view .LVU117
 383 00f2 F7EE006A 		vmov.f32	s13, #1.0e+0
 384 00f6 77EEA67A 		vadd.f32	s15, s15, s13
 408:Core/Src/system_stm32h7xx.c ****         break;
 385              		.loc 1 408 18 view .LVU118
 386 00fa 27EE277A 		vmul.f32	s14, s14, s15
 387              	.LVL14:
 409:Core/Src/system_stm32h7xx.c ****       }
 388              		.loc 1 409 9 is_stmt 1 view .LVU119
 389 00fe 22E0     		b	.L18
 390              	.LVL15:
 391              	.L21:
 393:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 392              		.loc 1 393 9 view .LVU120
 393:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 393              		.loc 1 393 39 is_stmt 0 view .LVU121
 394 0100 3A48     		ldr	r0, .L22
 395              	.LVL16:
 393:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 396              		.loc 1 393 39 view .LVU122
 397 0102 0168     		ldr	r1, [r0]
 393:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 398              		.loc 1 393 60 view .LVU123
 399 0104 C1F3C101 		ubfx	r1, r1, #3, #2
 393:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 400              		.loc 1 393 18 view .LVU124
 401 0108 3A4B     		ldr	r3, .L22+8
 402 010a CB40     		lsrs	r3, r3, r1
 403              	.LVL17:
 394:Core/Src/system_stm32h7xx.c **** 
 404              		.loc 1 394 9 is_stmt 1 view .LVU125
 394:Core/Src/system_stm32h7xx.c **** 
 405              		.loc 1 394 20 is_stmt 0 view .LVU126
 406 010c 07EE103A 		vmov	s14, r3	@ int
 407 0110 F8EE476A 		vcvt.f32.u32	s13, s14
 394:Core/Src/system_stm32h7xx.c **** 
 408              		.loc 1 394 40 view .LVU127
 409 0114 07EE102A 		vmov	s14, r2	@ int
 410 0118 B8EE476A 		vcvt.f32.u32	s12, s14
 394:Core/Src/system_stm32h7xx.c **** 
 411              		.loc 1 394 38 view .LVU128
 412 011c 86EE867A 		vdiv.f32	s14, s13, s12
 394:Core/Src/system_stm32h7xx.c **** 
 413              		.loc 1 394 81 view .LVU129
 414 0120 036B     		ldr	r3, [r0, #48]
 415              	.LVL18:
 394:Core/Src/system_stm32h7xx.c **** 
 416              		.loc 1 394 67 view .LVU130
 417 0122 C3F30803 		ubfx	r3, r3, #0, #9
 394:Core/Src/system_stm32h7xx.c **** 
 418              		.loc 1 394 58 view .LVU131
ARM GAS  /tmp/cceH40nX.s 			page 17


 419 0126 06EE903A 		vmov	s13, r3	@ int
 420 012a F8EE666A 		vcvt.f32.u32	s13, s13
 394:Core/Src/system_stm32h7xx.c **** 
 421              		.loc 1 394 120 view .LVU132
 422 012e 9FED356A 		vldr.32	s12, .L22+24
 423 0132 67EE867A 		vmul.f32	s15, s15, s12
 424              	.LVL19:
 394:Core/Src/system_stm32h7xx.c **** 
 425              		.loc 1 394 111 view .LVU133
 426 0136 76EEA77A 		vadd.f32	s15, s13, s15
 394:Core/Src/system_stm32h7xx.c **** 
 427              		.loc 1 394 138 view .LVU134
 428 013a F7EE006A 		vmov.f32	s13, #1.0e+0
 429 013e 77EEA67A 		vadd.f32	s15, s15, s13
 394:Core/Src/system_stm32h7xx.c **** 
 430              		.loc 1 394 16 view .LVU135
 431 0142 27EE277A 		vmul.f32	s14, s14, s15
 432              	.LVL20:
 396:Core/Src/system_stm32h7xx.c **** 
 433              		.loc 1 396 9 is_stmt 1 view .LVU136
 434              	.L18:
 411:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 435              		.loc 1 411 7 view .LVU137
 411:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 436              		.loc 1 411 20 is_stmt 0 view .LVU138
 437 0146 294B     		ldr	r3, .L22
 438 0148 1B6B     		ldr	r3, [r3, #48]
 411:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 439              		.loc 1 411 50 view .LVU139
 440 014a C3F34623 		ubfx	r3, r3, #9, #7
 411:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 441              		.loc 1 411 12 view .LVU140
 442 014e 0133     		adds	r3, r3, #1
 443              	.LVL21:
 412:Core/Src/system_stm32h7xx.c ****     }
 444              		.loc 1 412 7 is_stmt 1 view .LVU141
 412:Core/Src/system_stm32h7xx.c ****     }
 445              		.loc 1 412 57 is_stmt 0 view .LVU142
 446 0150 07EE903A 		vmov	s15, r3	@ int
 447 0154 F8EE677A 		vcvt.f32.u32	s15, s15
 412:Core/Src/system_stm32h7xx.c ****     }
 448              		.loc 1 412 40 view .LVU143
 449 0158 C7EE276A 		vdiv.f32	s13, s14, s15
 412:Core/Src/system_stm32h7xx.c ****     }
 450              		.loc 1 412 27 view .LVU144
 451 015c FCEEE67A 		vcvt.u32.f32	s15, s13
 452 0160 17EE902A 		vmov	r2, s15	@ int
 453              	.LVL22:
 412:Core/Src/system_stm32h7xx.c ****     }
 454              		.loc 1 412 27 view .LVU145
 455 0164 77E7     		b	.L12
 456              	.LVL23:
 457              	.L15:
 399:Core/Src/system_stm32h7xx.c ****         break;
 458              		.loc 1 399 11 is_stmt 1 view .LVU146
 399:Core/Src/system_stm32h7xx.c ****         break;
 459              		.loc 1 399 42 is_stmt 0 view .LVU147
ARM GAS  /tmp/cceH40nX.s 			page 18


 460 0166 07EE102A 		vmov	s14, r2	@ int
 461 016a F8EE476A 		vcvt.f32.u32	s13, s14
 399:Core/Src/system_stm32h7xx.c ****         break;
 462              		.loc 1 399 40 view .LVU148
 463 016e 9FED266A 		vldr.32	s12, .L22+28
 464 0172 86EE267A 		vdiv.f32	s14, s12, s13
 399:Core/Src/system_stm32h7xx.c ****         break;
 465              		.loc 1 399 83 view .LVU149
 466 0176 1D4B     		ldr	r3, .L22
 467 0178 1B6B     		ldr	r3, [r3, #48]
 399:Core/Src/system_stm32h7xx.c ****         break;
 468              		.loc 1 399 69 view .LVU150
 469 017a C3F30803 		ubfx	r3, r3, #0, #9
 399:Core/Src/system_stm32h7xx.c ****         break;
 470              		.loc 1 399 60 view .LVU151
 471 017e 06EE903A 		vmov	s13, r3	@ int
 472 0182 F8EE666A 		vcvt.f32.u32	s13, s13
 399:Core/Src/system_stm32h7xx.c ****         break;
 473              		.loc 1 399 122 view .LVU152
 474 0186 9FED1F6A 		vldr.32	s12, .L22+24
 475 018a 67EE867A 		vmul.f32	s15, s15, s12
 476              	.LVL24:
 399:Core/Src/system_stm32h7xx.c ****         break;
 477              		.loc 1 399 113 view .LVU153
 478 018e 76EEA77A 		vadd.f32	s15, s13, s15
 399:Core/Src/system_stm32h7xx.c ****         break;
 479              		.loc 1 399 140 view .LVU154
 480 0192 F7EE006A 		vmov.f32	s13, #1.0e+0
 481 0196 77EEA67A 		vadd.f32	s15, s15, s13
 399:Core/Src/system_stm32h7xx.c ****         break;
 482              		.loc 1 399 18 view .LVU155
 483 019a 27EE277A 		vmul.f32	s14, s14, s15
 484              	.LVL25:
 400:Core/Src/system_stm32h7xx.c **** 
 485              		.loc 1 400 9 is_stmt 1 view .LVU156
 486 019e D2E7     		b	.L18
 487              	.LVL26:
 488              	.L16:
 403:Core/Src/system_stm32h7xx.c ****         break;
 489              		.loc 1 403 11 view .LVU157
 403:Core/Src/system_stm32h7xx.c ****         break;
 490              		.loc 1 403 42 is_stmt 0 view .LVU158
 491 01a0 07EE102A 		vmov	s14, r2	@ int
 492 01a4 F8EE476A 		vcvt.f32.u32	s13, s14
 403:Core/Src/system_stm32h7xx.c ****         break;
 493              		.loc 1 403 40 view .LVU159
 494 01a8 9FED186A 		vldr.32	s12, .L22+32
 495 01ac 86EE267A 		vdiv.f32	s14, s12, s13
 403:Core/Src/system_stm32h7xx.c ****         break;
 496              		.loc 1 403 83 view .LVU160
 497 01b0 0E4B     		ldr	r3, .L22
 498 01b2 1B6B     		ldr	r3, [r3, #48]
 403:Core/Src/system_stm32h7xx.c ****         break;
 499              		.loc 1 403 69 view .LVU161
 500 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 403:Core/Src/system_stm32h7xx.c ****         break;
 501              		.loc 1 403 60 view .LVU162
ARM GAS  /tmp/cceH40nX.s 			page 19


 502 01b8 06EE903A 		vmov	s13, r3	@ int
 503 01bc F8EE666A 		vcvt.f32.u32	s13, s13
 403:Core/Src/system_stm32h7xx.c ****         break;
 504              		.loc 1 403 122 view .LVU163
 505 01c0 9FED106A 		vldr.32	s12, .L22+24
 506 01c4 67EE867A 		vmul.f32	s15, s15, s12
 507              	.LVL27:
 403:Core/Src/system_stm32h7xx.c ****         break;
 508              		.loc 1 403 113 view .LVU164
 509 01c8 76EEA77A 		vadd.f32	s15, s13, s15
 403:Core/Src/system_stm32h7xx.c ****         break;
 510              		.loc 1 403 140 view .LVU165
 511 01cc F7EE006A 		vmov.f32	s13, #1.0e+0
 512 01d0 77EEA67A 		vadd.f32	s15, s15, s13
 403:Core/Src/system_stm32h7xx.c ****         break;
 513              		.loc 1 403 18 view .LVU166
 514 01d4 27EE277A 		vmul.f32	s14, s14, s15
 515              	.LVL28:
 404:Core/Src/system_stm32h7xx.c **** 
 516              		.loc 1 404 9 is_stmt 1 view .LVU167
 517 01d8 B5E7     		b	.L18
 518              	.LVL29:
 519              	.L9:
 421:Core/Src/system_stm32h7xx.c ****     break;
 520              		.loc 1 421 5 view .LVU168
 421:Core/Src/system_stm32h7xx.c ****     break;
 521              		.loc 1 421 57 is_stmt 0 view .LVU169
 522 01da 044B     		ldr	r3, .L22
 523 01dc 1B68     		ldr	r3, [r3]
 421:Core/Src/system_stm32h7xx.c ****     break;
 524              		.loc 1 421 78 view .LVU170
 525 01de C3F3C103 		ubfx	r3, r3, #3, #2
 421:Core/Src/system_stm32h7xx.c ****     break;
 526              		.loc 1 421 25 view .LVU171
 527 01e2 044A     		ldr	r2, .L22+8
 528 01e4 DA40     		lsrs	r2, r2, r3
 529              	.LVL30:
 422:Core/Src/system_stm32h7xx.c ****   }
 530              		.loc 1 422 5 is_stmt 1 view .LVU172
 531 01e6 36E7     		b	.L12
 532              	.LVL31:
 533              	.L19:
 374:Core/Src/system_stm32h7xx.c ****     break;
 534              		.loc 1 374 25 is_stmt 0 view .LVU173
 535 01e8 094A     		ldr	r2, .L22+36
 536 01ea 34E7     		b	.L12
 537              	.L23:
 538              		.align	2
 539              	.L22:
 540 01ec 00440258 		.word	1476543488
 541 01f0 00093D00 		.word	4000000
 542 01f4 0090D003 		.word	64000000
 543 01f8 00000000 		.word	.LANCHOR0
 544 01fc 00000000 		.word	.LANCHOR1
 545 0200 00000000 		.word	.LANCHOR2
 546 0204 00000039 		.word	956301312
 547 0208 0024744A 		.word	1249125376
ARM GAS  /tmp/cceH40nX.s 			page 20


 548 020c 0024744B 		.word	1265902592
 549 0210 0024F400 		.word	16000000
 550              		.cfi_endproc
 551              	.LFE145:
 553              		.section	.text.ExitRun0Mode,"ax",%progbits
 554              		.align	1
 555              		.global	ExitRun0Mode
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv5-d16
 561              	ExitRun0Mode:
 562              	.LFB146:
 452:Core/Src/system_stm32h7xx.c **** 
 453:Core/Src/system_stm32h7xx.c **** /**
 454:Core/Src/system_stm32h7xx.c ****   * @brief  Exit Run* mode and Configure the system Power Supply
 455:Core/Src/system_stm32h7xx.c ****   *
 456:Core/Src/system_stm32h7xx.c ****   * @note   This function exits the Run* mode and configures the system power supply
 457:Core/Src/system_stm32h7xx.c ****   *         according to the definition to be used at compilation preprocessing level.
 458:Core/Src/system_stm32h7xx.c ****   *         The application shall set one of the following configuration option:
 459:Core/Src/system_stm32h7xx.c ****   *           - PWR_LDO_SUPPLY
 460:Core/Src/system_stm32h7xx.c ****   *           - PWR_DIRECT_SMPS_SUPPLY
 461:Core/Src/system_stm32h7xx.c ****   *           - PWR_EXTERNAL_SOURCE_SUPPLY
 462:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_1V8_SUPPLIES_LDO
 463:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_2V5_SUPPLIES_LDO
 464:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_1V8_SUPPLIES_EXT_AND_LDO
 465:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO
 466:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_1V8_SUPPLIES_EXT
 467:Core/Src/system_stm32h7xx.c ****   *           - PWR_SMPS_2V5_SUPPLIES_EXT
 468:Core/Src/system_stm32h7xx.c ****   *
 469:Core/Src/system_stm32h7xx.c ****   * @note   The function modifies the PWR->CR3 register to enable or disable specific
 470:Core/Src/system_stm32h7xx.c ****   *         power supply modes and waits until the voltage level flag is set, indicating
 471:Core/Src/system_stm32h7xx.c ****   *         that the power supply configuration is stable.
 472:Core/Src/system_stm32h7xx.c ****   *
 473:Core/Src/system_stm32h7xx.c ****   * @param  None
 474:Core/Src/system_stm32h7xx.c ****   * @retval None
 475:Core/Src/system_stm32h7xx.c ****   */
 476:Core/Src/system_stm32h7xx.c **** void ExitRun0Mode(void)
 477:Core/Src/system_stm32h7xx.c **** {
 563              		.loc 1 477 1 is_stmt 1 view -0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 478:Core/Src/system_stm32h7xx.c **** #if defined(USE_PWR_LDO_SUPPLY)
 479:Core/Src/system_stm32h7xx.c ****   #if defined(SMPS)
 480:Core/Src/system_stm32h7xx.c ****     /* Exit Run* mode by disabling SMPS and enabling LDO */
 481:Core/Src/system_stm32h7xx.c ****     PWR->CR3 = (PWR->CR3 & ~PWR_CR3_SMPSEN) | PWR_CR3_LDOEN;
 482:Core/Src/system_stm32h7xx.c ****   #else
 483:Core/Src/system_stm32h7xx.c ****     /* Enable LDO mode */
 484:Core/Src/system_stm32h7xx.c ****     PWR->CR3 |= PWR_CR3_LDOEN;
 568              		.loc 1 484 5 view .LVU175
 569              		.loc 1 484 14 is_stmt 0 view .LVU176
 570 0000 054A     		ldr	r2, .L26
 571 0002 D368     		ldr	r3, [r2, #12]
 572 0004 43F00203 		orr	r3, r3, #2
 573 0008 D360     		str	r3, [r2, #12]
ARM GAS  /tmp/cceH40nX.s 			page 21


 485:Core/Src/system_stm32h7xx.c ****   #endif /* SMPS */
 486:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 487:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 574              		.loc 1 487 3 is_stmt 1 view .LVU177
 575              	.L25:
 488:Core/Src/system_stm32h7xx.c ****   {}
 576              		.loc 1 488 4 discriminator 1 view .LVU178
 487:Core/Src/system_stm32h7xx.c ****   {}
 577              		.loc 1 487 9 discriminator 1 view .LVU179
 487:Core/Src/system_stm32h7xx.c ****   {}
 578              		.loc 1 487 14 is_stmt 0 discriminator 1 view .LVU180
 579 000a 034B     		ldr	r3, .L26
 580 000c 5B68     		ldr	r3, [r3, #4]
 487:Core/Src/system_stm32h7xx.c ****   {}
 581              		.loc 1 487 9 discriminator 1 view .LVU181
 582 000e 13F4005F 		tst	r3, #8192
 583 0012 FAD0     		beq	.L25
 489:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_EXTERNAL_SOURCE_SUPPLY)
 490:Core/Src/system_stm32h7xx.c ****   #if defined(SMPS)
 491:Core/Src/system_stm32h7xx.c ****     /* Exit Run* mode */
 492:Core/Src/system_stm32h7xx.c ****     PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_SMPSEN | PWR_CR3_LDOEN)) | PWR_CR3_BYPASS;
 493:Core/Src/system_stm32h7xx.c ****   #else
 494:Core/Src/system_stm32h7xx.c ****     PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_LDOEN)) | PWR_CR3_BYPASS;
 495:Core/Src/system_stm32h7xx.c ****   #endif /* SMPS */
 496:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 497:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 498:Core/Src/system_stm32h7xx.c ****   {}
 499:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_DIRECT_SMPS_SUPPLY) && defined(SMPS)
 500:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 501:Core/Src/system_stm32h7xx.c ****   PWR->CR3 &= ~(PWR_CR3_LDOEN);
 502:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 503:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 504:Core/Src/system_stm32h7xx.c ****   {}
 505:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_1V8_SUPPLIES_LDO) && defined(SMPS)
 506:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 507:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_0 | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 508:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 509:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 510:Core/Src/system_stm32h7xx.c ****   {}
 511:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_2V5_SUPPLIES_LDO) && defined(SMPS)
 512:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 513:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_1 | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 514:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 515:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 516:Core/Src/system_stm32h7xx.c ****   {}
 517:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_1V8_SUPPLIES_EXT_AND_LDO) && defined(SMPS)
 518:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 519:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_0 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 520:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 521:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 522:Core/Src/system_stm32h7xx.c ****   {}
 523:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_2V5_SUPPLIES_EXT_AND_LDO) && defined(SMPS)
 524:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 525:Core/Src/system_stm32h7xx.c ****   PWR->CR3 |= PWR_CR3_SMPSLEVEL_1 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPSEN | PWR_CR3_LDOEN;
 526:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 527:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 528:Core/Src/system_stm32h7xx.c ****   {}
ARM GAS  /tmp/cceH40nX.s 			page 22


 529:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_1V8_SUPPLIES_EXT) && defined(SMPS)
 530:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 531:Core/Src/system_stm32h7xx.c ****   PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_LDOEN)) | PWR_CR3_SMPSLEVEL_0 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPS
 532:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 533:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 534:Core/Src/system_stm32h7xx.c ****   {}
 535:Core/Src/system_stm32h7xx.c **** #elif defined(USE_PWR_SMPS_2V5_SUPPLIES_EXT) && defined(SMPS)
 536:Core/Src/system_stm32h7xx.c ****   /* Exit Run* mode */
 537:Core/Src/system_stm32h7xx.c ****   PWR->CR3 = (PWR->CR3 & ~(PWR_CR3_LDOEN)) | PWR_CR3_SMPSLEVEL_1 | PWR_CR3_SMPSEXTHP | PWR_CR3_SMPS
 538:Core/Src/system_stm32h7xx.c ****   /* Wait till voltage level flag is set */
 539:Core/Src/system_stm32h7xx.c ****   while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 540:Core/Src/system_stm32h7xx.c ****   {}
 541:Core/Src/system_stm32h7xx.c **** #else
 542:Core/Src/system_stm32h7xx.c ****   /* No system power supply configuration is selected at exit Run* mode */
 543:Core/Src/system_stm32h7xx.c **** #endif /* USE_PWR_LDO_SUPPLY */
 544:Core/Src/system_stm32h7xx.c **** }
 584              		.loc 1 544 1 view .LVU182
 585 0014 7047     		bx	lr
 586              	.L27:
 587 0016 00BF     		.align	2
 588              	.L26:
 589 0018 00480258 		.word	1476544512
 590              		.cfi_endproc
 591              	.LFE146:
 593              		.global	D1CorePrescTable
 594              		.global	SystemD2Clock
 595              		.global	SystemCoreClock
 596              		.section	.data.SystemCoreClock,"aw"
 597              		.align	2
 598              		.set	.LANCHOR2,. + 0
 601              	SystemCoreClock:
 602 0000 0090D003 		.word	64000000
 603              		.section	.data.SystemD2Clock,"aw"
 604              		.align	2
 605              		.set	.LANCHOR1,. + 0
 608              	SystemD2Clock:
 609 0000 0090D003 		.word	64000000
 610              		.section	.rodata.D1CorePrescTable,"a"
 611              		.align	2
 612              		.set	.LANCHOR0,. + 0
 615              	D1CorePrescTable:
 616 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 616      01020304 
 616      01020304 
 616      06
 617 000d 070809   		.ascii	"\007\010\011"
 618              		.text
 619              	.Letext0:
 620              		.file 2 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h"
 621              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h"
 622              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 623              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 624              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h753xx.h"
 625              		.file 7 "/opt/gcc-arm-none-eabi-9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 626              		.file 8 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/_types.h"
 627              		.file 9 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/reent.h"
 628              		.file 10 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/sys/lock.h"
ARM GAS  /tmp/cceH40nX.s 			page 23


 629              		.file 11 "/opt/gcc-arm-none-eabi-9-2020-q2-update/arm-none-eabi/include/math.h"
 630              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 631              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_flash.h"
 632              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  /tmp/cceH40nX.s 			page 24


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32h7xx.c
     /tmp/cceH40nX.s:17     .text.SystemInit:0000000000000000 $t
     /tmp/cceH40nX.s:25     .text.SystemInit:0000000000000000 SystemInit
     /tmp/cceH40nX.s:173    .text.SystemInit:00000000000000c4 $d
     /tmp/cceH40nX.s:188    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/cceH40nX.s:195    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/cceH40nX.s:219    .text.SystemCoreClockUpdate:0000000000000014 $d
     /tmp/cceH40nX.s:244    .text.SystemCoreClockUpdate:0000000000000046 $t
     /tmp/cceH40nX.s:540    .text.SystemCoreClockUpdate:00000000000001ec $d
     /tmp/cceH40nX.s:554    .text.ExitRun0Mode:0000000000000000 $t
     /tmp/cceH40nX.s:561    .text.ExitRun0Mode:0000000000000000 ExitRun0Mode
     /tmp/cceH40nX.s:589    .text.ExitRun0Mode:0000000000000018 $d
     /tmp/cceH40nX.s:615    .rodata.D1CorePrescTable:0000000000000000 D1CorePrescTable
     /tmp/cceH40nX.s:608    .data.SystemD2Clock:0000000000000000 SystemD2Clock
     /tmp/cceH40nX.s:601    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/cceH40nX.s:597    .data.SystemCoreClock:0000000000000000 $d
     /tmp/cceH40nX.s:604    .data.SystemD2Clock:0000000000000000 $d
     /tmp/cceH40nX.s:611    .rodata.D1CorePrescTable:0000000000000000 $d

NO UNDEFINED SYMBOLS
